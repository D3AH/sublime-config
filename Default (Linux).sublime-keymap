[
    // Default settings customizations
    { "keys": ["ctrl+k", "ctrl+t"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },
    { "keys": ["ctrl+k", "ctrl+m"], "command": "toggle_minimap" },
    { "keys": ["ctrl+shift+r"], "command": "reveal_in_side_bar" },
    { "keys": ["ctrl+tab"], "command": "next_view" },
    { "keys": ["ctrl+shift+tab"], "command": "prev_view" },
    { "keys": ["ctrl+shift+c"], "command": "toggle_comment", "args": { "block": false } },
    { "keys": ["ctrl+shift+alt+d"], "command": "fold_by_level", "args": {"level": 2} },
    { "keys": ["ctrl+g"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },
    { "keys": ["ctrl+l"], "command": "show_overlay", "args": {"overlay": "goto", "text": ":"} },
    { "keys": ["ctrl+space"], "command": "auto_complete" },
    { "keys": ["ctrl+shift+a"], "command": "prompt_add_folder" },
    { "keys": ["ctrl+shift+alt+pagedown"], "command": "find_next" },
    { "keys": ["ctrl+shift+alt+pageup"], "command": "find_prev" },

    { "keys": ["ctrl+alt+super+up"], "command": "select_lines", "args": {"forward": false }},
    { "keys": ["ctrl+alt+super+down"], "command": "select_lines", "args": {"forward": true }},
    { "keys": ["ctrl+alt+super+w"], "command": "toggle_setting", "args": {"setting": "word_wrap"}},

    // Replace panel key bindings
    { "keys": ["alt+shift+f"], "command": "find_next", "context":
        [
            { "key": "panel", "operand": "replace" }, 
            { "key": "panel_has_focus" }
        ]
    },
    { "keys": ["alt+shift+r"], "command": "replace_next", "context":
        [
            { "key": "panel", "operand": "replace" }, 
            { "key": "panel_has_focus" }
        ]
    },

    { "keys": ["alt+shift+ctrl+r"], "command": "replace_all", "context":
        [
            { "key": "panel", "operand": "replace" }, 
            { "key": "panel_has_focus" }
        ]
    },

    // Move Tab plugin customization
    { "keys": ["ctrl+shift+pageup"], "command": "move_tab", "args": { "position": "-1" } },
    { "keys": ["ctrl+shift+pagedown"], "command": "move_tab", "args": { "position": "+1" } },

    // Origami plugin customization
    { "keys": ["alt+2"], "command": "create_pane", "args": {"direction": "down"} },
    { "keys": ["alt+3"], "command": "create_pane", "args": {"direction": "right"} },

    { "keys": ["alt+up"], "command": "travel_to_pane", "args": {"direction": "up"} },
    { "keys": ["alt+right"], "command": "travel_to_pane", "args": {"direction": "right"} },
    { "keys": ["alt+down"], "command": "travel_to_pane", "args": {"direction": "down"} },
    { "keys": ["alt+left"], "command": "travel_to_pane", "args": {"direction": "left"} },

    // BracketHighlither plugin customization
    // Fold contents between brackets
    // Fold contents between brackets
    {
        "keys": ["ctrl+shift+d"],
        "command": "bh_key",
        "args":
        {
            "plugin": {
                "type": ["__all__"],
                "command" : "bh_modules.foldbracket"
            }
        }
    },

    // PhpNamespace plugin customization
    { "keys": ["ctrl+alt+n"], "command": "php_namespace" },

    { "keys": ["ctrl+shift+alt+t"], "command": "run_multiple_commands", "args":
        {
            "commands": [
                { "command": "fold_by_level", "args": {"level": 5} },
                { "command": "fold_by_level", "args": {"level": 4} },
                { "command": "fold_by_level", "args": {"level": 3} },
                { "command": "fold_by_level", "args": {"level": 2} },
                { "command": "fold_by_level", "args": {"level": 1} }
            ]
        }
    },

    // Xdebug
    {"keys": ["f9"], "command": "xdebug_breakpoint"},
    {"keys": ["ctrl+b"], "command": "xdebug_breakpoint"},
    {"keys": ["ctrl+f9"], "command": "xdebug_session_start"},
    {"keys": ["ctrl+shift+f9"], "command": "xdebug_session_stop", "args" : {"close_windows" : true}},
    {"keys": ["f5"], "command": "xdebug_continue", "args": {"command": "step_over"}},
    {"keys": ["f10"], "command": "xdebug_continue", "args": {"command": "step_over"}},
    {"keys": ["ctrl+f5"], "command": "xdebug_continue", "args": {"command": "step_into"}},
    {"keys": ["f11"], "command": "xdebug_continue", "args": {"command": "step_into"}},
    {"keys": ["ctrl+shift+f5"], "command": "xdebug_continue", "args": {"command": "step_out"}},
    {"keys": ["ctrl+shift+alt+f5"], "command": "xdebug_continue", "args": {"command": "run"}},
    {"keys": ["f8"], "command": "xdebug_continue", "args": {"command": "run"}},
    {"keys": ["ctrl+shift+alt+f9"], "command": "xdebug_continue", "args": {"command": "detach"}},
    {"keys": ["ctrl+k", "ctrl+w"], "command": "xdebug_watch"},
    {"keys": ["ctrl+shift+alt+w"], "command": "xdebug_watch", "args": {"clear" : true}},
    {"keys": ["ctrl+shift+alt+b"], "command": "xdebug_clear_all_breakpoints"},

    // Copy file path
    {
        "keys": ["ctrl+shift+alt+c"], "command": "copy_path"
    },

    {"keys": ["ctrl+shift+alt+n"], "command": "new_window_for_project"},

    // Folding and unfolding
    { "keys": ["ctrl+shift+alt+f"], "command": "fold" },
    { "keys": ["ctrl+shift+alt+u"], "command": "unfold" },

    // Sublime Bookmars
    {
        "keys": ["f2"], "command": "sublime_bookmark", "args" : { "type" : "toggle_line" }
    },
    {
        "keys": ["ctrl+shift+alt+down"], "command": "sublime_bookmark", "args" : { "type" : "goto_next" }
    },
    {
        "keys": ["ctrl+shift+alt+up"], "command": "sublime_bookmark", "args" : { "type" : "goto_previous" }
    },
    {
        "keys": ["ctrl+shift+alt+f2"], "command": "sublime_bookmark", "args" : { "type" : "remove_all" }
    },

    // Focus file on sidebar
    { "keys": ["ctrl+k", "ctrl+f"], "command": "reveal_in_side_bar"},

    // Emmet
    {
  "keys": ["tab"], 
  "command": "expand_abbreviation_by_tab", 

  // put comma-separated syntax selectors for which 
  // you want to expandEmmet abbreviations into "operand" key 
  // instead of SCOPE_SELECTOR.
  // Examples: source.js, text.html - source
  "context": [
    {
      "operand": "SCOPE_SELECTOR", 
      "operator": "equal", 
      "match_all": true, 
      "key": "selector"
    }, 

    // run only if there's no selected text
    {
      "match_all": true, 
      "key": "selection_empty"
    },

    // don't work if there are active tabstops
    {
      "operator": "equal", 
      "operand": false, 
      "match_all": true, 
      "key": "has_next_field"
    }, 

    // don't work if completion popup is visible and you
    // want to insert completion with Tab. If you want to
    // expand Emmet with Tab even if popup is visible -- 
    // remove this section
    {
      "operand": false, 
      "operator": "equal", 
      "match_all": true, 
      "key": "auto_complete_visible"
    }, 
    {
      "match_all": true, 
      "key": "is_abbreviation"
    }
  ]
}
]
